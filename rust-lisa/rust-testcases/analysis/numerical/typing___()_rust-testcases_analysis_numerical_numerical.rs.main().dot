digraph {
	"node0" [shape="rect",color="black",label=<let x : untyped = 2<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ x: [i32]<BR/>[stack: [i32]] ]]<BR/>}} -&gt; [x]>];
	"node1" [shape="rect",color="gray",label=<let v : untyped = *(x, y)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: [i32]<BR/>x: [i32]<BR/>y: [i32]<BR/>z: [i32]<BR/>[stack: [i32]] ]]<BR/>}} -&gt; [v]>];
	"node2" [shape="rect",color="gray",label=<let u : untyped = -(y, x)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ _|_ ]]<BR/>}} -&gt; [u]>];
	"node3" [shape="rect",color="gray",label=<let z : untyped = +(x, y)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ x: [i32]<BR/>y: [i32]<BR/>z: [i32]<BR/>[stack: [i32]] ]]<BR/>}} -&gt; [z]>];
	"node4" [shape="rect",color="gray",label=<let q : untyped = -(x)<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ _|_ ]]<BR/>}} -&gt; []>];
	"node5" [shape="rect",color="gray",label=<let w : untyped = /(v, x)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: [i32]<BR/>w: [i32]<BR/>x: [i32]<BR/>y: [i32]<BR/>z: [i32]<BR/>[stack: [i32]] ]]<BR/>}} -&gt; [w]>];
	"node6" [shape="rect",color="gray",label=<let p : untyped = %(z, x)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ _|_ ]]<BR/>}} -&gt; [p]>];
	"node7" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ _|_ ]]<BR/>}} -&gt; [skip]>];
	"node8" [shape="rect",color="gray",label=<let y : untyped = 3<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ x: [i32]<BR/>y: [i32]<BR/>[stack: [i32]] ]]<BR/>}} -&gt; [y]>];
	"node1" -> "node5" [color="black"];
	"node2" -> "node7" [color="black"];
	"node3" -> "node1" [color="black"];
	"node4" -> "node6" [color="black"];
	"node5" -> "node4" [color="black"];
	"node0" -> "node8" [color="black"];
	"node6" -> "node2" [color="black"];
	"node8" -> "node3" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
